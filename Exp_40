#include <stdio.h>
#include <stdlib.h>

int absolute(int a, int b) {
    return abs(a - b);
}

int main() {
    int numTracks = 5;
    int tracks[] = {55, 58, 60, 70, 18};
    int headPosition = 50;

    int totalHeadMovement = 0;

    int direction = 1; // 1 for moving towards higher tracks, -1 for moving towards lower tracks

    // Sort tracks in ascending order
    for (int i = 0; i < numTracks - 1; i++) {
        for (int j = 0; j < numTracks - i - 1; j++) {
            if (tracks[j] > tracks[j + 1]) {
                int temp = tracks[j];
                tracks[j] = tracks[j + 1];
                tracks[j + 1] = temp;
            }
        }
    }

    int startIndex;
    for (int i = 0; i < numTracks; i++) {
        if (tracks[i] >= headPosition) {
            startIndex = i;
            break;
        }
    }

    while (1) {
        int closestTrack = -1;
        int minDistance = 10000;

        for (int i = startIndex; i < numTracks; i++) {
            if (tracks[i] >= headPosition && tracks[i] - headPosition < minDistance) {
                minDistance = tracks[i] - headPosition;
                closestTrack = tracks[i];
            }
        }

        if (closestTrack == -1) {
            // Wrap around to the beginning of the track array
            closestTrack = tracks[startIndex];
            startIndex = 0;
        }

        totalHeadMovement += absolute(closestTrack, headPosition);
        headPosition = closestTrack;

        printf("Moved to track %d\n", headPosition);

        int trackIndex;
        for (trackIndex = 0; trackIndex < numTracks; trackIndex++) {
            if (tracks[trackIndex] == headPosition) {
                break;
            }
        }

        if (trackIndex != -1) {
            for (int i = trackIndex; i < numTracks - 1; i++) {
                tracks[i] = tracks[i + 1];
            }
            numTracks--;
        }

        if (numTracks == 0)
            break;
    }

    double averageHeadMovement = (double)totalHeadMovement / numTracks;

    printf("\nTotal Head Movement: %d\n", totalHeadMovement);
    printf("Average Head Movement: %.2lf\n", averageHeadMovement);

    return 0;
}
