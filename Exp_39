#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int absolute(int a, int b) {
    return abs(a - b);
}

void look(int tracks[], int numTracks, int headPosition) {
    int totalHeadMovement = 0;
    int direction = 1; // 1 for moving up, -1 for moving down

    int minTrack = tracks[0];
    int maxTrack = tracks[numTracks - 1];

    while (1) {
        int closestTrack = -1;
        int minDistance = 10000;

        for (int i = 0; i < numTracks; i++) {
            if (direction == 1 && tracks[i] >= headPosition && tracks[i] - headPosition < minDistance) {
                minDistance = tracks[i] - headPosition;
                closestTrack = tracks[i];
            } else if (direction == -1 && tracks[i] <= headPosition && headPosition - tracks[i] < minDistance) {
                minDistance = headPosition - tracks[i];
                closestTrack = tracks[i];
            }
        }

        if (closestTrack == -1) {
            if (direction == 1) {
                direction = -1;
                headPosition = minTrack;
            } else {
                direction = 1;
                headPosition = maxTrack;
            }
        } else {
            totalHeadMovement += absolute(closestTrack, headPosition);
            headPosition = closestTrack;
            printf("%d ", headPosition);
        }

        int done = 1;
        for (int i = 0; i < numTracks; i++) {
            if (tracks[i] != -1) {
                done = 0;
                break;
            }
        }

        if (done)
            break;
    }

    printf("\nAverage Head Movement: %.2lf\n", (double)totalHeadMovement / numTracks);
}

int main() {
    int numTracks = 5;
    int tracks[] = {55, 58, 60, 70, 18};
    int headPosition = 50;

    printf("Track Order: %d ", headPosition);
    look(tracks, numTracks, headPosition);

    return 0;
}
