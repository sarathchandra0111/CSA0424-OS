#include <stdio.h>

void priorityScheduling(int n, int burstTime[], int priority[]) {
    int waitingTime[n], turnaroundTime[n], completionTime[n];
    float totalWaitingTime = 0, totalTurnaroundTime = 0;

    // Calculate completion time for each process
    completionTime[0] = burstTime[0];
    for (int i = 1; i < n; i++) {
        completionTime[i] = completionTime[i-1] + burstTime[i];
    }

    // Calculate waiting time for each process
    for (int i = 0; i < n; i++) {
        waitingTime[i] = completionTime[i] - burstTime[i];
        totalWaitingTime += waitingTime[i];
    }

    // Calculate turnaround time for each process
    for (int i = 0; i < n; i++) {
        turnaroundTime[i] = completionTime[i];
        totalTurnaroundTime += turnaroundTime[i];
    }

    // Print the results
    printf("Process\tBurst Time\tPriority\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t\t%d\t\t%d\t\t%d\t\t%d\n", i+1, burstTime[i], priority[i], waitingTime[i], turnaroundTime[i]);
    }

    // Calculate and print the average waiting time and average turnaround time
    float avgWaitingTime = totalWaitingTime / n;
    float avgTurnaroundTime = totalTurnaroundTime / n;
    printf("\nAverage Waiting Time: %.2f\n", avgWaitingTime);
    printf("Average Turnaround Time: %.2f\n", avgTurnaroundTime);
}

int main() {
    int n = 3; // Number of processes
    int burstTime[] = {30, 5, 12}; // Burst times of processes
    int priority[] = {2, 1, 3}; // Priorities of processes

    priorityScheduling(n, burstTime, priority);

    return 0;
}
